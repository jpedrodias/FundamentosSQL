# docker-compose com servidor MongoDB e ferramenta web: mongo-express
name: FundamentosSQL

services:
  # Servidor 3: MongoDB
  mongo:
    image: mongo:latest
    container_name: mongodb_server
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      TZ: ${TZ}
    networks:
      - default
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Interface web para MongoDB: mongo-express
  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    restart: unless-stopped
    ports:
      - "8084:8081"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongodb_data:/data/db
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      TZ: ${TZ}
    depends_on:
      - mongo
    networks:
      - default


volumes:
  mongodb_data:    # Servidor 3: MongoDB
  mongodb_config:  # MongoDB Configurations


networks:
  default:
    name: FundamentosSQL-PostgreSQL-network
    #external: true # uncomment this on production
    driver: bridge
