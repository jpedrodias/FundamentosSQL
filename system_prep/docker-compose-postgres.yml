# docker-compose com servidor PostgreSQL e ferramentas web: adminer e pgAdmin
name: FundamentosSQL-PostgreSQL

services:
  # Servidor 1: PostgreSQL Configuration
  postgres:
    image: postgres:latest
    container_name: postgres_server
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Web Interface for Database: vários
  adminer:
    image: adminer:latest
    container_name: adminer_postgres
    restart: unless-stopped
    ports:
      - 8081:8080
    depends_on:
      - postgres
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      TZ: ${TZ}
    networks:
      - default

  # Web Interface for Database: PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - 8083:80
    depends_on:
      - postgres
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: ${TZ}
    user: "5050:5050"  # Especifica o UID e GID do usuário pgadmin
    networks:
      - default


volumes:
  postgres_data:   # Servidor 1: PostgreSQL
  pgadmin_data:    # Web Interface: pgAdmin


networks:
  default:
    name: FundamentosSQL-PostgreSQL-network
    #external: true # uncomment this on production
    driver: bridge
